# Скопируйте этот файл как config.yaml и отредактируйте значения под вашу среду.
# Все комментарии ниже объясняют, для чего нужно каждое поле.

app:
  # Человеко‑читаемое имя приложения (попадает только в логи)
  name: OneC Backup Bot
  # Часовой пояс для планировщика (APScheduler) и меток времени в логах
  # Пример: Europe/Moscow, Asia/Almaty и т.д.
  timezone: Europe/Moscow

security:
  # Telegram user IDs, которым разрешены команды бота (доступ по белому списку).
  # Можно продублировать или расширить через .env: ALLOWED_USER_IDS=111,222
  allowed_user_ids: []

onec:
  # Полный путь к исполняемому файлу 1С 8.3 (тонкий клиент).
  exe: "C:\\Program Files (x86)\\1cv8\\8.3.24.1368\\bin\\1cv8.exe"
  # Путь к файловой базе 1С (каталог, где лежит .1CD и сопутствующие файлы).
  base_path: "C:\\Users\\ddani\\Downloads\\1С_Zernosbyt"
  # Учетная запись 1С, если в базе включена аутентификация 1С (иначе оставить пустым).
  uc: ""
  up: ""

backup:
  # Каталог, куда складываются бэкапы, логи и база приложения (SQLite).
  # ВАЖНО: это не папка рабочей базы; здесь хранятся ТОЛЬКО копии и служебные файлы.
  backup_dir: "C:\\Users\\ddani\\Downloads\\1C_Backups"
  # Имя файла лога, который будет создан в backup_dir (ротация включена).
  log_file: "backup.log"
  # Подкаталоги для разных типов копий (создаются автоматически при первом запуске).
  hourly_subdir: "Hourly"
  daily_subdir: "Daily"
  monthly_subdir: "Monthly"
  # Подкаталог для годовых копий
  yearly_subdir: "Yearly"
  # Retention policies
  # Сколько дней хранить «часовые» копии (включая .dt и .zip)
  keep_hourly_days: 3
  # Сколько файлов хранить в «ежедневных» копиях (лишнее удаляется по убыванию даты)
  keep_daily_count: 30
  # Сколько файлов хранить в «ежемесячных» копиях
  keep_monthly_count: 6
  # Сколько файлов хранить в «ежегодных» копиях (лет)
  keep_yearly_count: 3
  # Во сколько (час, 0–23) делать ежедневную копию из последнего «часового» бэкапа
  daily_copy_hour: 23
  # В какие день/час создавать «ежемесячную» копию (например, 1‑е число в 23:00)
  monthly_copy_day: 1
  monthly_copy_hour: 23
  # В какие месяц/день/час создавать «ежегодную» копию (по умолчанию 1 января в 23:00)
  yearly_copy_month: 1
  yearly_copy_day: 1
  yearly_copy_hour: 23
  # File name prefix
  file_prefix: "Zernosbyt_"
  # Compression options
  # Как обрабатывать файл .dt после выгрузки: none — оставить как есть; zip — дополнительно упаковать в ZIP.
  # Итоговый путь, сохраняемый в БД, будет указывать на конечный файл (.zip или .dt)
  compress: "zip"            # none|zip
  # Уровень сжатия ZIP: 0–9 (чем больше — тем лучше сжатие и дольше по времени)
  compress_level: 6           # 0-9 for zip
  # Удалять ли исходный .dt ИЗ КАТАЛОГА БЭКАПОВ после успешного создания .zip
  # Рабочая база 1С в onec.base_path никогда не удаляется и не изменяется этим параметром
  delete_dt_after_compress: true

scheduler:
  # Крон‑выражение для планового бэкапа (по умолчанию: 13:05 и 18:05 — обед и конец дня).
  # Формат: "минуты часы день месяц день_недели". Примеры: "5 13,18 * * *" или "5 8-23 * * *"
  # Дополнительно включена защита «тихих часов»: с 00:00 до 07:59 бэкап пропускается даже если cron совпал.
  backup_cron: "5 13,18 * * *"
  # Крон для отправки и записи метрик (CPU, RAM, диск). По умолчанию — каждые 5 минут.
  metrics_cron: "*/5 * * * *"

uptime_kuma:
  # URL push‑мониторинга Uptime Kuma. Если пусто — отправки не происходят.
  # Мы автоматически добавляем параметры status=up|down и msg=<сообщение> при вызовах.
  push_url: "https://monitoring.zernosbyt.ru/api/push/<UUID>"

telegram:
  # Токен бота берётся из .env (переменная BOT_TOKEN).
  # Опционально можно указать chat_id для служебных рассылок (по умолчанию не используется).
  broadcast_chat_id: ""
